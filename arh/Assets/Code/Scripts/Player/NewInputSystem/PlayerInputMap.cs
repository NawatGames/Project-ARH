//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Code/Scripts/Player/NewInputSystem/PlayerInputMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputMap"",
    ""maps"": [
        {
            ""name"": ""AstronautGameplay"",
            ""id"": ""70a08f44-5f08-4ab7-9fc0-e9820df75a71"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""9c535118-3872-47a8-bb1b-dde882e38332"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""35fac0bf-24a4-48ae-94dd-8da5cae773c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""86c1fc2c-befc-4ab0-9e88-c10ce962b535"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""e01c9e11-4de3-4a60-9d73-f449f07603d8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1c6bbcbe-428f-4626-8fdd-d9c5e081ff29"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c9b2f057-1b15-4e2c-bb8e-a68e80074172"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""32370ec7-00eb-40fe-ad59-41cf589db740"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09dc6914-6c54-4ea9-b8f8-822ca2a7c9b3"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AlienGameplay"",
            ""id"": ""cd5dc926-e039-49f1-b867-a9edc184103c"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""06af8a30-17ae-4c9b-b692-191b2e96f4cc"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""122b3916-d1f6-4516-b099-77b16ee996ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Eat"",
                    ""type"": ""Button"",
                    ""id"": ""4347618a-5cd0-4b09-82a4-d5a9674811a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""13753330-b91b-4317-b626-48656418b027"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""47fb7502-f266-4e68-bd74-2c33fbb234c9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""42973638-4634-45ca-8645-a3160295005f"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5558b190-5d95-4732-b2ac-83b252bee4ea"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""82fcdb23-a1a0-4a68-91c1-304201a54f94"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""592d7e7b-c893-42d7-8e76-525ebb3da545"",
                    ""path"": ""<Keyboard>/leftBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e316daeb-fe3e-4c1c-b57a-ecd1c9ae8212"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // AstronautGameplay
        m_AstronautGameplay = asset.FindActionMap("AstronautGameplay", throwIfNotFound: true);
        m_AstronautGameplay_Walk = m_AstronautGameplay.FindAction("Walk", throwIfNotFound: true);
        m_AstronautGameplay_Jump = m_AstronautGameplay.FindAction("Jump", throwIfNotFound: true);
        m_AstronautGameplay_Interact = m_AstronautGameplay.FindAction("Interact", throwIfNotFound: true);
        // AlienGameplay
        m_AlienGameplay = asset.FindActionMap("AlienGameplay", throwIfNotFound: true);
        m_AlienGameplay_Walk = m_AlienGameplay.FindAction("Walk", throwIfNotFound: true);
        m_AlienGameplay_Jump = m_AlienGameplay.FindAction("Jump", throwIfNotFound: true);
        m_AlienGameplay_Eat = m_AlienGameplay.FindAction("Eat", throwIfNotFound: true);
        m_AlienGameplay_Crouch = m_AlienGameplay.FindAction("Crouch", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // AstronautGameplay
    private readonly InputActionMap m_AstronautGameplay;
    private List<IAstronautGameplayActions> m_AstronautGameplayActionsCallbackInterfaces = new List<IAstronautGameplayActions>();
    private readonly InputAction m_AstronautGameplay_Walk;
    private readonly InputAction m_AstronautGameplay_Jump;
    private readonly InputAction m_AstronautGameplay_Interact;
    public struct AstronautGameplayActions
    {
        private @PlayerInputMap m_Wrapper;
        public AstronautGameplayActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_AstronautGameplay_Walk;
        public InputAction @Jump => m_Wrapper.m_AstronautGameplay_Jump;
        public InputAction @Interact => m_Wrapper.m_AstronautGameplay_Interact;
        public InputActionMap Get() { return m_Wrapper.m_AstronautGameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AstronautGameplayActions set) { return set.Get(); }
        public void AddCallbacks(IAstronautGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_AstronautGameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AstronautGameplayActionsCallbackInterfaces.Add(instance);
            @Walk.started += instance.OnWalk;
            @Walk.performed += instance.OnWalk;
            @Walk.canceled += instance.OnWalk;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
        }

        private void UnregisterCallbacks(IAstronautGameplayActions instance)
        {
            @Walk.started -= instance.OnWalk;
            @Walk.performed -= instance.OnWalk;
            @Walk.canceled -= instance.OnWalk;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
        }

        public void RemoveCallbacks(IAstronautGameplayActions instance)
        {
            if (m_Wrapper.m_AstronautGameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAstronautGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_AstronautGameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AstronautGameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AstronautGameplayActions @AstronautGameplay => new AstronautGameplayActions(this);

    // AlienGameplay
    private readonly InputActionMap m_AlienGameplay;
    private List<IAlienGameplayActions> m_AlienGameplayActionsCallbackInterfaces = new List<IAlienGameplayActions>();
    private readonly InputAction m_AlienGameplay_Walk;
    private readonly InputAction m_AlienGameplay_Jump;
    private readonly InputAction m_AlienGameplay_Eat;
    private readonly InputAction m_AlienGameplay_Crouch;
    public struct AlienGameplayActions
    {
        private @PlayerInputMap m_Wrapper;
        public AlienGameplayActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_AlienGameplay_Walk;
        public InputAction @Jump => m_Wrapper.m_AlienGameplay_Jump;
        public InputAction @Eat => m_Wrapper.m_AlienGameplay_Eat;
        public InputAction @Crouch => m_Wrapper.m_AlienGameplay_Crouch;
        public InputActionMap Get() { return m_Wrapper.m_AlienGameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AlienGameplayActions set) { return set.Get(); }
        public void AddCallbacks(IAlienGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_AlienGameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AlienGameplayActionsCallbackInterfaces.Add(instance);
            @Walk.started += instance.OnWalk;
            @Walk.performed += instance.OnWalk;
            @Walk.canceled += instance.OnWalk;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Eat.started += instance.OnEat;
            @Eat.performed += instance.OnEat;
            @Eat.canceled += instance.OnEat;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
        }

        private void UnregisterCallbacks(IAlienGameplayActions instance)
        {
            @Walk.started -= instance.OnWalk;
            @Walk.performed -= instance.OnWalk;
            @Walk.canceled -= instance.OnWalk;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Eat.started -= instance.OnEat;
            @Eat.performed -= instance.OnEat;
            @Eat.canceled -= instance.OnEat;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
        }

        public void RemoveCallbacks(IAlienGameplayActions instance)
        {
            if (m_Wrapper.m_AlienGameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAlienGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_AlienGameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AlienGameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AlienGameplayActions @AlienGameplay => new AlienGameplayActions(this);
    public interface IAstronautGameplayActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IAlienGameplayActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnEat(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
    }
}
